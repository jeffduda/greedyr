#!/bin/bash
CXX_STD=CXX11
ITKRCMAKE=`${R_DIR}Rscript -e 'a<-ITKR:::itkIncludes(); cat(a)'`
ITKRLIB=`${R_DIR}Rscript -e 'a<-ITKR:::itkLibs(); cat(a)'`
compflags=`${R_DIR}Rscript -e 'a<-ITKR:::itkCompileFlags(); cat(a)'`
ITKDIR=`${R_DIR}Rscript -e 'a<-ITKR:::itkDir(); cat(a)'`

# get a version of cmake
cmaker=`which cmake`
if [[ ! -x $cmaker ]] ; then # try r version
  cmaker=`${R_HOME}/bin/Rscript -e 'a<-cmaker::cmake()'`
fi
if [[ `uname` -eq Darwin ]] ; then
  CMAKE_BUILD_TYPE=Release
fi
if [[ $TRAVIS -eq true ]] ; then
  CMAKE_BUILD_TYPE=Release
fi

gitcmd=`which git`
if [[ ! -x $gitcmd ]] ; then # try install git
  apt-get install -y git-core
fi
gitcmd=`which git`
if [[ ! -x $gitcmd ]] ; then # try install git
  exit 1
fi

cd ./src
# platform-specific Makevars
#echo "myantssource=\${PWD}/ants/" > Makevars
echo "ITK = \`\$(R_HOME)/bin/Rscript -e 'ITKR:::itkIncludes()'\`" > Makevars
echo "GREEDY=\${PWD}/greedy/src/" >> Makevars
needVCL_CAN_STATIC_CONST_INIT_FLOAT=0
if [[ ${#CC} -gt 0 ]] ; then # test the requested compiler
  temp=$(${CC} --version | grep clang)
  if [[ ${#temp} -gt 0 ]] ; then
    needVCL_CAN_STATIC_CONST_INIT_FLOAT=1
  fi
else # just try gcc directly
  temp=$(gcc --version | grep clang)
  if [[ ${#temp} -gt 0 ]] ; then
    needVCL_CAN_STATIC_CONST_INIT_FLOAT=1
  fi
fi
echo $OSTYPE $needVCL_CAN_STATIC_CONST_INIT_FLOAT
if [[ ${needVCL_CAN_STATIC_CONST_INIT_FLOAT} -eq 1 ]]; then
echo "PKG_CPPFLAGS = -I\${ITK} -I\${PWD} -I\${GREEDY} -I\${GREEDY}/ITKFilters/include" >> Makevars
else
echo "PKG_CPPFLAGS = -I\${ITK} -I\${PWD} -I\${GREEDY} -I\${GREEDY}/ITKFilters/include" >> Makevars
fi

echo "CXX_STD = CXX11" >> Makevars

#echo "myantslib=\${PWD}/antb/lib/" >> Makevars

#echo "libants=\`find \${myantslib} -name \"lib*.a\"\`" >> Makevars
echo "libitk=\`find \\\`\$(R_HOME)/bin/Rscript -e 'ITKR:::itkLibs()'\\\` -name \"lib*.a\"\` " >> Makevars

echo "mygreedylib=\${PWD}/greedybuild/" >> Makevars
echo "libgreedy=\`find \${mygreedylib} -name \"lib*.a\"\`" >> Makevars


echo "PKG_LIBS = \${libitk}  \${libgreedy} \${libitk} \${libgreedy} \${libitk} \
                 \${libitk}  \${libgreedy} \${itklib} \${libgreedy} \
                 \${libitk}  \${libgreedy} \${itklib} \${libgreedy}  \${itklib} \
                 \${libitk} \${libgreedy} \${itklib} \${libgreedy} " >> Makevars

echo ".PHONY: all libs" >> Makevars

echo "all: \$(SHLIB)" >> Makevars

echo "\$(SHLIB): libs" >> Makevars

echo "tlibs: ; cd \${PWD}/greedybuild" >> Makevars

echo "libs: ; cd \${PWD}/greedybuild && \$(MAKE) -j 2" >> Makevars


#greedygit=https://github.com/pyushkevich/greedy.git
#greedytag=2805d1f8d2b7047bfa8b091d9bc03bac161559fb

greedygit=https://github.com/jeffduda/greedy.git
greedytag=14cacd07d3afcf4a5d6642de78e4142cc7a11745

if [[ ! -d greedy ]] ; then
  git clone $greedygit greedy
  cd greedy
  git checkout master; git pull; git checkout $greedytag
  cd ..
  mkdir greedybuild
  cd greedybuild
  ${cmaker} -DITK_DIR:PATH=${ITKDIR} \
      -DCMAKE_C_FLAGS="${CMAKE_C_FLAGS} ${compflags} -DNDEBUG  "\
    -DCMAKE_CXX_FLAGS="${CMAKE_CXX_FLAGS} ${compflags} -DNDEBUG  "\
      -DBUILD_SHARED_LIBS=OFF \
      -DBUILD_ALL_ANTS_APPS=OFF \
      -DUSE_SYSTEM_ITK=OFF \
      -DBUILD_TESTING=OFF \
      -DCOPY_SCRIPT_FILES_TO_BIN_DIR=OFF \
      -DCMAKE_BUILD_TYPE:STRING="${CMAKE_BUILD_TYPE}"  ../greedy
  cd ../
fi
